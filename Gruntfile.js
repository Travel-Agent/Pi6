// Generated by CoffeeScript 1.6.3
require('shelljs/global');

module.exports = function(grunt) {
  grunt.initConfig({
    pkg: grunt.file.readJSON('package.json'),
    manifest: grunt.file.readJSON('assets/manifest.json'),
    coffee: {
      script: {
        options: {
          bare: true,
          join: true
        },
        files: {
          'build/script.js': ['src/rocket.coffee', 'src/script.coffee']
        }
      },
      eventpage: {
        options: {
          bare: true
        },
        files: {
          'build/eventpage.js': ['src/eventpage_tabbing.coffee']
        }
      }
    },
    watch: {
      devmain: {
        files: ['src/rocket.coffee', 'src/script.coffee'],
        tasks: ['coffee:script', 'reload']
      },
      deveventpage: {
        files: ['src/eventpage_tabbing.coffee', 'src/eventpage_update_dev.coffee'],
        tasks: ['coffee:eventpage', 'reload']
      }
    },
    concurrent: {
      dev: {
        options: {
          logConcurrentOutput: true
        },
        tasks: ['watch:devmain', 'watch:deveventpage']
      }
    },
    crx: {
      compile: {
        "src": "build/",
        "dest": "data/<%= pkg.name %>-<%= manifest.version %>.crx",
        "baseURL": "https://github.com/wildeyes/Pi6",
        "exclude": [".git"],
        "privateKey": "../pems/Pi6.pem",
        "maxBuffer": 3000 * 1024
      }
    }
  });
  grunt.loadNpmTasks('grunt-contrib-watch');
  grunt.loadNpmTasks('grunt-contrib-coffee');
  grunt.loadNpmTasks('grunt-crx');
  grunt.loadNpmTasks('grunt-concurrent');
  grunt.registerTask('init', ['init-dev', 'coffee:script', 'coffee:eventpage']);
  grunt.registerTask('init-dev', 'Run init script', function() {
    mkdir('-p', 'build');
    return exec('ln assets/* build/');
  });
  grunt.registerTask('work', 'Setup everything to develop', ['server', 'dev']);
  grunt.registerTask('dev', ['concurrent:dev']);
  grunt.registerTask('server', 'Setup Chromix Server', function() {
    return exec('terminator -e "node $HOME/bin/chromix/script/server.js" &', {
      async: true
    });
  });
  grunt.registerTask('reload', 'Reload Browser=>{current page + (previously opened) chrome://page extensions}', function() {
    var chromix, server;
    server = 'node $HOME/bin/chromix/script/server.js';
    chromix = 'node $HOME/bin/chromix/script/chromix.js';
    exec("" + chromix + " with 'chrome://extensions' reload");
    return exec("" + chromix + " reload");
  });
  grunt.registerTask('testcrx', 'Load testing CRX', function() {
    var crx, manifest, pkg;
    pkg = grunt.config('pkg');
    manifest = grunt.config('manifest');
    crx = "" + pkg.name + "-" + manifest.version + ".crx";
    return exec("chromium --load-component-extension data/" + crx);
  });
  return grunt.registerTask('prepublish', ['src/rocket', 'coffee:main', 'coffee:onlyprod', 'crx']);
};
